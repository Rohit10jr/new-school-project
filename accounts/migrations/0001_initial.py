# Generated by Django 5.1 on 2024-09-03 12:16

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_data_entry', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('register_number', models.CharField(max_length=15, unique=True)),
                ('date_of_birth', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('user_type', models.CharField(blank=True, choices=[('is_student', 'is_student'), ('is_staff', 'is_staff'), ('is_admin', 'is_admin')], default=None, max_length=20, null=True)),
                ('phone', models.CharField(default=1234567890, max_length=10, unique=True, validators=[django.core.validators.MinLengthValidator(10)])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
    ]
